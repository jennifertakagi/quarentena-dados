# -*- coding: utf-8 -*-
"""QuarentenaDados - aula02 - Jennifer

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t7zyaWjxxsoInx2Br79qk0HdiNkQFNgE

#Aula 01
"""

import pandas as pd

filmes = pd.read_csv("https://raw.githubusercontent.com/alura-cursos/introducao-a-data-science/master/aula0/ml-latest-small/movies.csv")
filmes.columns = ["filmeId", "titulo", "generos"]
filmes.head()

avaliacoes = pd.read_csv("https://github.com/alura-cursos/introducao-a-data-science/blob/master/aula0/ml-latest-small/ratings.csv?raw=true")
avaliacoes.columns = ["usuarioId", "filmeId", "nota", "momento"]
avaliacoes

notas_medias_por_filme = avaliacoes.groupby("filmeId")["nota"].mean()
notas_medias_por_filme.head()

filmes_com_media = filmes.join(notas_medias_por_filme, on="filmeId")
filmes_com_media.head()

"""## Desafio 1 do [Paulo Silveira](https://twitter.com/paulo_caelum)

O Paulo fez uma análise rápida e disse que tem 18 filmes sem avaliações, será que ele acertou?

Determine quantos filmes não tem avaliações e quais são esses filmes.
"""

filmes_sem_nota = filmes_com_media["nota"].isnull()
filmes_com_media[filmes_sem_nota]

"""## Desafio 2 do [Guilherme Silveira](https://twitter.com/guilhermecaelum)

Mudar o nome da coluna nota do dataframe **filmes_com_media** para nota_média após o join.
"""

filmes_com_media.rename(columns={"nota": "nota_media"}, inplace=True)

"""## Desafio 3 do [Guilherme Silveira](https://twitter.com/guilhermecaelum)

Colocar o número de avaliações por filme, isto é, não só a média mas o TOTAL de votos por filme.
"""

numero_avaliacoes_filmes = avaliacoes.groupby("filmeId")["nota"].count()
filmes_com_media = filmes_com_media.join(numero_avaliacoes_filmes, on="filmeId")
filmes_com_media.rename(columns={"nota": "numero_avaliacoes"}, inplace=True)

"""## Desafio 4 do [Thiago Gonçalves](https://twitter.com/tgcsantos)

Arredondar as médias (coluna de nota média) para duas casas decimais.
"""

filmes_com_media["nota_media"] = filmes_com_media["nota_media"].round(2)

"""## Desafio 5 do [Allan Spadini](https://twitter.com/allanspadini)

Descobrir os generos dos filmes (quais são eles, únicos). (esse aqui o bicho pega)
"""

generos_unicos = filmes_com_media["generos"].str.get_dummies("|")
generos_unicos.columns.to_list()

"""## Desafio 6 da [Thais André](https://twitter.com/thais_tandre)

Contar o número de aparições de cada genero.
"""

aparicoes_generos = filmes_com_media["generos"].str.get_dummies().sum().sort_values(ascending=False)

"""## Desafio 7 do [Guilherme Silveira](https://twitter.com/guilhermecaelum)

Plotar o gráfico de aparições de cada genero. Pode ser um gráfico de tipo igual a barra.
"""

aparicoes_generos.plot(
    kind='bar', 
    title='Filmes por categoria',
    figsize=(8,8))

"""# Aula 02

##Desafio 1 do [Guilherme Silveira](https://twitter.com/guilhermecaelum)

Rotacionar os ticks (os nomes dos generos) do gráfico de barras verdes (o último), de forma a deixar as legendas mais legíveis.
"""

import seaborn as sns
import matplotlib.pyplot as plt

sns.set_style("whitegrid")

plt.figure(figsize=(16,8))
sns.barplot(x=aparicoes_generos.index,
            y=aparicoes_generos.values,
            palette=sns.color_palette("BuGn_r", n_colors=len(aparicoes_generos) + 4))
plt.xticks(rotation=45)
plt.show()

"""## Desafio 2 do [Paulo Silveira](https://twitter.com/paulo_caelum)

Encontar vários filmes com médias próximas e distribuições diferentes, use a função **plot_filmes(n)** para plotar.
"""

filmes_com_media.sort_values("nota_media", ascending=False)[800:950]

def plot_filmes(id_filme):
  notas_filme = avaliacoes.query(f"filmeId=={id_filme}")["nota"]
  notas_filme.plot(kind="hist")
  return notas_filme.describe()

plot_filmes(858) #Godfather, The (1972)

plot_filmes(1196) #Star Wars: Episode V - The Empire Strikes Back

"""## Desafio 3 do [Paulo Silveira](https://twitter.com/paulo_caelum)

 Criar o boxplot dos 10 filmes com mais votos (não é com maior média, é com mais votos!). Não apenas plot mas também analise e tente tirar conclusões.
"""

dez_filmes_mais_avaliacoes = filmes_com_media.sort_values("numero_avaliacoes", ascending=False).head(10)
dez_filmes_mais_avaliacoes_ids = dez_filmes_mais_avaliacoes["filmeId"].to_list()
dez_filmes_mais_avaliacoes_titulos = dez_filmes_mais_avaliacoes["titulo"].to_list()

plt.figure(figsize=(18, 8))
ax = sns.boxplot(x="filmeId", y="nota", data=avaliacoes.query(f"filmeId in {dez_filmes_mais_avaliacoes_ids}"))
ax.set_xticklabels(dez_filmes_mais_avaliacoes_titulos, fontsize=12)
ax.set_xlabel("Filme", fontsize=16)
ax.set_ylabel("Nota", fontsize=16)
plt.xticks(rotation=45)

plt.show()

"""## Desafio 4 do [Guilherme Silveira](https://twitter.com/guilhermecaelum)

Configurar a visualização do boxplot gerado pelo seaborn (último boxplot plotado na aula). Configurar o tamanho e colocar o nome dos filmes nos ticks.
"""

plt.figure(figsize=(12, 6))

ax = sns.boxplot(data = avaliacoes.query("filmeId in [1,2,919,46578]"), x="filmeId", y="nota")

ax.set_xticklabels(filmes.query("filmeId in [1,2,919,46578]")["titulo"])
ax.set_xlabel("Filme", fontsize=16)
ax.set_ylabel("Nota", fontsize=16)

plt.show()

"""## Desafio 5 do [Allan Spadini](https://twitter.com/allanspadini)

Calcular moda, média e mediana dos filmes. Explore filmes com notas mais próximas de 0.5, 3 e 5.
"""

avaliacoes.head()

def explorar_filmes(id_filme):
  filme = filmes.query(f"filmeId == {id_filme}")
  notas = avaliacoes.query(f"filmeId == {id_filme}")["nota"]
  
  print(f'Filme: {filme.iloc[0, 1]}')  
  print(f'Moda: {notas.mode().values}')    
  print(f'Média: {notas.mean()}')
  print(f'Mediana: {notas.median()}')
  print('------------')

explorar_filmes(8387)
explorar_filmes(89386)
explorar_filmes(3774)

explorar_filmes(2041)
explorar_filmes(7541)
explorar_filmes(160080)

explorar_filmes(177593)
explorar_filmes(1178)
explorar_filmes(4334)

"""## Desafio 6 da [Thais André](https://twitter.com/thais_tandre)

Plotar o boxplot e o histograma um do lado do outro (na mesma figura ou em figuras distintas, mas um do lado do outro).
"""

pulp_fiction = avaliacoes.query('filmeId == 296')['nota']

f, axes = plt.subplots(1, 2, figsize=(16, 6))

pulp_fiction.plot(kind='hist', ax=axes[0])
pulp_fiction.plot(kind='box', ax=axes[1])

plt.show()

"""## Desafio 7 do [Thiago Gonçalves](https://twitter.com/tgcsantos)

Criar um gráfico de notas médias por ano (média geral considerando todos os filmes lançados naquele ano).
"""

filmes_media_ano = filmes_com_media.copy()
filmes_media_ano["ano"] = filmes_media_ano["titulo"].str.extract("\((\d{4})\)")
filmes_media_ano.head()

notas_medias_ano = filmes_media_ano.groupby("ano")["nota_media"].mean()

plt.figure(figsize=(16,8))
notas_medias_ano.plot()
